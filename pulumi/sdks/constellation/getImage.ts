// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImage(args: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("constellation:index/getImage:getImage", {
        "attestationVariant": args.attestationVariant,
        "csp": args.csp,
        "marketplaceImage": args.marketplaceImage,
        "region": args.region,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    attestationVariant: string;
    csp: string;
    marketplaceImage?: boolean;
    region?: string;
    version?: string;
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    readonly attestationVariant: string;
    readonly csp: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly image: outputs.GetImageImage;
    readonly marketplaceImage?: boolean;
    readonly region?: string;
    readonly version?: string;
}
export function getImageOutput(args: GetImageOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetImageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("constellation:index/getImage:getImage", {
        "attestationVariant": args.attestationVariant,
        "csp": args.csp,
        "marketplaceImage": args.marketplaceImage,
        "region": args.region,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    attestationVariant: pulumi.Input<string>;
    csp: pulumi.Input<string>;
    marketplaceImage?: pulumi.Input<boolean>;
    region?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
